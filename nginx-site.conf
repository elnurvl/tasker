resolver 127.0.0.11;

map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

server {
    listen              80;
    listen              443 ssl http2;
    ssl_certificate     ssl/server.crt;
    ssl_certificate_key ssl/server.key;

    root                /var/www/html/public;

#   Uncomment the below section to enable CORS restriction
#     set $cors "0";
#     if ($http_origin ~* (https?:\/\/.*\.tasker\.test)) {
#         set $cors "1";
#     }
#
#     set $allow_origin "";
#     set $allow_methods "";
#
#     if ($cors = "1") {
#         set $allow_origin $http_origin;
#         set $allow_methods "GET, POST, PATCH, PUT, DELETE, OPTIONS";
#     }

#     add_header 'Access-Control-Allow-Origin' $allow_origin;
#     add_header 'Access-Control-Allow-Methods' $allow_methods;

    location ~ \.env$ {
        deny all;
        return 403;
    }

    location ~ \.git {
        deny all;
        return 403;
    }

    location ~ ^/(api|up|apps|docs|telescope|horizon|health|_ignition|vendor|.well-known) {
        try_files $uri /index.php?$query_string;
    }

    location /app {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
        proxy_set_header Scheme $scheme;
        proxy_set_header SERVER_PORT $server_port;
        proxy_set_header REMOTE_ADDR $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        set $upstream http://reverb:8080;
        proxy_pass $upstream;
    }

    location ~ (\.txt|\.ico)$ {
        root /var/www/html/public;
    }

    location /storage {
        root /var/www/html/public;
    }

    location /health/nginx {
        stub_status on;
        access_log   off;
    }

    location ~ (^/health/fpm|\.php$) {
       fastcgi_pass   laravel.test:9000;
       fastcgi_read_timeout 120;
       fastcgi_index  index.php;
       fastcgi_param  SCRIPT_FILENAME  /var/www/html/public/$fastcgi_script_name;
       include        fastcgi_params;
    }

    set $error_template 'Make sure the following project is properly set up and running locally:';

    location / {
        proxy_set_header Cache-Control $http_cache_control;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        set $upstream http://host.docker.internal:3000;
        proxy_pass $upstream;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        error_page 502 = @proxy_0_502;
    }
    location @proxy_0_502 {
        default_type text/html;
        return 502 "$error_template Web App";
    }

    location /auth {
        proxy_set_header Cache-Control $http_cache_control;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        set $upstream https://keycloak:8443;
        proxy_pass $upstream;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        error_page 502 = @keycloak_502;
    }
    location @keycloak_502 {
        default_type text/html;
        return 502 "$error_template Keycloak";
    }

    location /mail {
        proxy_set_header Cache-Control $http_cache_control;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        set $upstream https://mailpit:8025;
        proxy_pass $upstream;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        error_page 502 = @mail_502;
    }
    location @mail_502 {
        default_type text/html;
        return 502 "$error_template Mailpit";
    }


}
